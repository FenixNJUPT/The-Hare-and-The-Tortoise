C51 COMPILER V9.54   RABBIT                                                                11/21/2019 09:37:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE RABBIT
OBJECT MODULE PLACED IN .\Objects\rabbit.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\rabbit.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Drivers;.\USER) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\rabbit.lst) TABS(2) OBJECT(.\Objects\rabbit.obj)

line level    source

   1          /*
   2          rabbit 012
   3                 543
   4          */
   5          #include "config.h"
   6          
   7          struct Rabbit
   8          {
   9            char x[3];
  10            char y[2];
  11            unsigned char Score;  // 兔子的分数
  12            unsigned char Speed;  // 兔子的速度
  13          }rabbit;  // 兔子结构体
  14          
  15          static struct Barrier
  16          {
  17            char x[3];  // 障碍物的横坐标
  18            char y; // 障碍物的纵坐标
  19          //  unsigned char yes;
  20          }barrier; // 障碍物结构体
  21          
  22          
  23          enum Dir{ speedup, speeddown, left, right}; //方向枚举
  24          
  25          
  26          //***********变量声明***************//
  27          unsigned char DispRAM[8]={0}; // 蛇坐标缓存
  28          unsigned char tCount;
  29          unsigned char keyValue;
  30          unsigned char speedLevel=25;
  31          extern uchar keyVal; // 来源于key.c
  32          //**********************************//
  33          static void createBarrier()
  34          {
  35   1        barrier.x[0] = rand()%(WIDTH-3);
  36   1        barrier.x[1] = barrier.x[0]+1;
  37   1        barrier.x[2] = barrier.x[0]+2;
  38   1        barrier.y = WIDTH-1;
  39   1      }
  40          
  41          //****************初始化兔子的位置等***********************//
  42          static void initRabbit()
  43          {
  44   1        //********初始化兔子参数**********//
  45   1        rabbit.y[0]=1;
  46   1        rabbit.y[1]=1;
  47   1        rabbit.y[2]=1;
  48   1        rabbit.y[3]=0;
  49   1        rabbit.y[4]=0;
  50   1        rabbit.y[5]=0;
  51   1        
  52   1        rabbit.x[0]=3;
  53   1        rabbit.x[1]=4;
  54   1        rabbit.x[2]=5;
C51 COMPILER V9.54   RABBIT                                                                11/21/2019 09:37:29 PAGE 2   

  55   1        rabbit.x[3]=5;
  56   1        rabbit.x[4]=4;
  57   1        rabbit.x[5]=3;
  58   1        createBarrier();
  59   1      }
  60          
  61          //********************刷新界面*******************//
  62          static void drawRabbit()
  63          {
  64   1        unsigned char i=0;
  65   1        for(i=0; i<8; i++) DispRAM[i]=0;
  66   1        for(i=0; i<6; i++)
  67   1          DispRAM[rabbit.y[i]] |= 1<<rabbit.x[i];
  68   1        scanDisplay(DispRAM);
*** WARNING C206 IN LINE 68 OF USER\rabbit.c: 'scanDisplay': missing function-prototype
*** ERROR C267 IN LINE 68 OF USER\rabbit.c: 'scanDisplay': requires ANSI-style prototype
  69   1        drawPoint(food.x, food.y);
  70   1      }
  71          
  72          //********************兔子运动坐标刷新*******************//
  73          static void runRabbit()
  74          {
  75   1        rabbit.x[0]=rabbit.x[1]-1;
  76   1        rabbit.x[2]=rabbit.x[1]+1;
  77   1        rabbit.x[5]=rabbit.x[1]-1;
  78   1        rabbit.x[4]=rabbit.x[1];
  79   1        rabbit.x[3]=rabbit.x[1]+1;
  80   1      }
  81          
  82          
  83          //*******************方向按键处理***********************//
  84          static void changeDir(unsigned char key)
  85          {
  86   1        // 方向按键的规则
  87   1        switch(key)
  88   1        {
  89   2          case speedup: 
  90   2            speedLevel--; break;
  91   2          case speeddown:     
  92   2            speedLevel++; break;
  93   2          case left:  
  94   2            snake.x[1]=snake.x[1]-1;  break;
  95   2          case right: 
  96   2            snake.x[1]=snake.x[1]+1;  break;
  97   2          default: break;
  98   2        }
  99   1      }
 100          
 101          //********************启动游戏（主函数）*********************//
 102          void startRabbit()
 103          {
 104   1        uchar i,j;
 105   1        initRabbit();
 106   1        while(1)
 107   1        {
 108   2          changeDir(keyValue);
 109   2          
 110   2          // 障碍物运行的速度，由speedLevel决定
 111   2          if(tCount >= speedLevel)
 112   2          {
 113   3            tCount=0;
 114   3            barrier.y--;
C51 COMPILER V9.54   RABBIT                                                                11/21/2019 09:37:29 PAGE 3   

 115   3            runRabbit();
 116   3          }
 117   2            
 118   2          //**********************触碰边线及障碍物***************************//
 119   2          // 限定兔子活动范围
 120   2          if(snake.x[1]>(WIDTH-2))
 121   2          {
 122   3            Rabbit.Score=Rabbit.Score-5;
 123   3            snake.x[1]=snake.x[1]-1;
 124   3          }
 125   2          else if(snake.x[1]<1)
 126   2          {
 127   3            Rabbit.Score=Rabbit.Score-5;
 128   3            snake.x[1]=snake.x[1]+1;
 129   3          }
 130   2          // 触及障碍物
 131   2          for(i=0; i<3; i++)
 132   2          {
 133   3            for(j=0;j<3;j++)
 134   3            {
 135   4               if(barrier.x[j]==snake.x[i] && barrier.y[j]==snake.y[i])
 136   4               Rabbit.Score=Rabbit.Score-5;
 137   4            }
 138   3          }  
 139   2          drawRabbit();
 140   2        }
 141   1      }

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
